getpwd()
getwd()
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp()
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
install.packages("ggthemes")
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp()
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp()
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
# Data
salg <- read_excel("C:\\Users\\Tue Hellstern\\Documents\\Demo\\Demo\\data\\SalgsData.xlsx", sheet = "salgs_data")
salg <- filter(salg, Country=="Denmark")
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity")
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(aes(label = Total), vjust = -0.5)
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(stat = "Total")
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(stat=Total)
# Data
salg <- read_excel("C:\\Users\\Tue Hellstern\\Documents\\Demo\\Demo\\data\\SalgsData.xlsx", sheet = "salgs_data")
salg <- filter(salg, Country=="Denmark")
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(stat=Total)
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(Total)
source('~/test.R')
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(aes(label = Total, y = pos), size = 3)
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(stat="identity") +
geom_text(aes(label = Total, y = Total), size = 3)
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(aes(fill = CompanyType), stat="identity") +
geom_text(aes(label = Total, y = Total), size = 3)
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(aes(fill = CompanyType), stat="identity") +
geom_text(aes(class, Total, label = Total, fill = NULL), data = Total)
salg %>%
ggplot(aes(x=CompanyType, y=Total)) +
geom_bar(aes(fill = CompanyType), stat="identity") +
geom_text(
aes(label = stat(y), group = CompanyType),
stat = 'summary', fun.y = sum, vjust = -1
)
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp('Demo/Demo')
runApp()
runApp('Demo/Demo')
# **************************
# Primtal
# **************************
PrimtalCheck <- function(x){
if (x == 2) {
TRUE
} else if (any(x %% 2:(x-1) == 0)) {
resultat = "Tallet er IKKE et primtal"
} else {
resultat = "Tallet er et primtal"
}
resultat
}
PrimtalCheck(2)
# **************************
# Primtal
# **************************
PrimtalCheck <- function(x){
if (x == 2) {
resultat = "Tallet er et primtal"
} else if (any(x %% 2:(x-1) == 0)) {
resultat = "Tallet er IKKE et primtal"
} else {
resultat = "Tallet er et primtal"
}
resultat
}
PrimtalCheck(2)
MinSum(10, 2)
for (x in tal){
if (x == 2)
next
print(x)
}
# For Loop
tal = 0:50
for (x in tal){
if (x == 2)
next
print(x)
}
# For Loop
tal = 0:50
for (x in tal){
if (x == 2)
print(x)
else if (any(x %% 2:(x-1) == 0))
next
else {
print(x)
}
}
SalgUdenRabat <- 2000
if (SalgUdenRabat <= 1000) {
print("Ingen rabat, prisen bliver: ", SalgUdenRabat)
} else if (SalgUdenRabat <= 5000){
print("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1))
} else {
print("Rabat er 20%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.2))
}
SalgUdenRabat <- 2000
if (SalgUdenRabat <= 1000) {
print("Ingen rabat, prisen bliver: ", SalgUdenRabat)
} else if (SalgUdenRabat <= 5000){
print("Rabat er 10%, prisen bliver: ", SalgUdenRabat)
} else {
print("Rabat er 20%, prisen bliver: ", SalgUdenRabat)
}
SalgUdenRabat <- 2000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat))
}
SalgUdenRabat <- 900
SalgUdenRabat <- 9000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat))
}
SalgUdenRabat <- 900
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat))
}
SalgUdenRabat <- 9000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat*0.1))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat*0.2))
}
SalgUdenRabat <- 2000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1)))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat*0.2))
}
SalgUdenRabat <- 2000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1)))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.2)))
}
SalgUdenRabat <- 5000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1)))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.2)))
}
SalgUdenRabat <- 5000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1)))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.2)))
}
SalgUdenRabat <- 6000
if (SalgUdenRabat <= 1000) {
print(c("Ingen rabat, prisen bliver: ", SalgUdenRabat))
} else if (SalgUdenRabat <= 5000){
print(c("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1)))
} else {
print(c("Rabat er 20%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.2)))
}
# ****************************
# Rabat & Pris
# ****************************
Rabat <- function(SalgUdenRabat){
if (SalgUdenRabat <= 1000) {
resultat = c("Ingen rabat, prisen bliver: ", SalgUdenRabat)
} else if (SalgUdenRabat <= 5000){
resultat = c("Rabat er 10%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.1))
} else {
resultat = c("Rabat er 20%, prisen bliver: ", SalgUdenRabat-(SalgUdenRabat*0.2))
}
print(resultat)
}
Rabat(2000)
rabat(800)
Rabat(800)
Rabat(800)
Rabat(4000)
Rabat(10000)
# Den web side/URL vi skal bruge
minurl <- "http://xweb.geos.ed.ac.uk/~weather/jcmb_ws/CR1000_Weather.dat"
WeatherStationData <- read.table(minurl, skip=2, header=TRUE)
read_excel(
path,
sheet = NULL,
range = NULL,
col_names = TRUE,
col_types = NULL,
na = "",
trim_ws = TRUE,
skip = 0,
n_max = Inf,
guess_max = min(1000, n_max),
progress = readxl_progress(),
.name_repair = "unique"
)
# Data
height_weight <- read_excel("SeminarData.xlsx", sheet = "height_weight")
install.packages("statsDK")
install.packages("tidyverse")
# Aktiver de to pakker
library(statsDK)
library(tidyverse)
# Installer pakker
install.packages("statsDK")
install.packages("statsDK")
install.packages("C:/Users/Tue Hellstern/Downloads/statsDK_0.1.1.tar.gz", repos = NULL, type = "source")
# Aktiver de to pakker
library(statsDK)
library(tidyverse)
folk2 <- retrieve_data("FOLK2", Tid = "1980")
glimpse(folk2)
View(folk2)
folk2 <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folk2)
ggplot(data = folk2, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
folk1980 <- retrieve_data("FOLK2", Tid = "1980")
glimpse(folk1980)
folk1980 <-
folk1980 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folk1980)
ggplot(data = folk1980, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
folk_all <- retrieve_data("FOLK2")
# API - Statistikbanke
browseURL("https://www.statistikbanken.dk")
View(folk2)
View(folk_all)
View(folk1980)
View(folk2)
folk1980 <- retrieve_data("FOLK2", Tid = "1980")
View(folk1980)
folkKon <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
folkAlder <-
folk2 %>%
group_by(ALDER, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
folk2 <- retrieve_data("FOLK2", Tid = "1980") # 17.207 poster
glimpse(folk2)
folkKon <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
folkAlder <-
folk2 %>%
group_by(ALDER, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folkKon)
head(folkAlder)
folkKon <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
folkAlder <-
folk2 %>%
group_by(ALDER, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folkKon)
head(folkAlder)
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(ALDER))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkAlder, aes(x = factor(TID), y = INDHOLD, fill = factor(ALDER))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkAlder, aes(x=HERKOMST), y = ALDER)
ggplot(data = folkAlder, aes(x=HERKOMST), y = INDHOLD)
ggplot(data = folkAlder, aes(x=HERKOMST), y = ALDER)
ggplot(data = folkAlder, aes(x=HERKOMST), y = INDHOLD, fill = factor(ALDER))
ggplot(data = folkAlder, aes(x=HERKOMST), y = INDHOLD, fill = factor(ALDER))
View(folkAlder)
View(folkAlder)
View(folk2)
folkKon <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
folkIeland <-
folk2 %>%
group_by(IELAND, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folkIeland)
ggplot(data = folkIeland, aes(x = factor(TID), y = INDHOLD, fill = factor(ALDER))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkIeland, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
folkIeland <-
folk2 %>%
group_by(KØN, IELAND, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
ggplot(data = folkIeland, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkIeland, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ IELAND, scale = "free_y", ncol = 2)
folkIeland <-
folk2 %>%
group_by(KØN, IELAND) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folkIeland)
View(folk2)
folkIeland <-
folk2 %>%
group_by(KØN, STATSB) %>%
summarise(INDHOLD = sum(INDHOLD))
View(folkIeland)
View(folkIeland)
folkStatsb <-
folk2 %>%
group_by(KØN, STATSB) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folkStatsb)
ggplot(data = folkStatsb, aes(x = factor(STATSB), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") +
facet_wrap(~ KØN, scale = "free_y", ncol = 2)
View(folk2)
folk2 <- retrieve_data("FOLK2", Tid = "1980") # 17.207 poster
glimpse(folk2)
folkKon <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
head(folkKon)
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") + # position = "dodge" angiver at søjerne skal stå ved siden af hinanden.
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
shiny::runApp('Demo/Demo')
# Data
height_weight <- read_excel("SeminarData.xlsx", sheet = "height_weight")
# lm()
relation <- lm(weight~height, height_weight)
print(relation)
print(summary(relation))
# predict()
a <- data.frame(height = 180)
result <-  predict(relation,a)
print(result)
# Plot data
# Standard
# Scatter
scatter.smooth(height_weight$weight, height_weight$height, cex = 1.3, pch = 16, col = "blue", main = "HÃ¸jde og VÃ¦gt", xlab = "VÃ¦gt i Kg",ylab = "HÃ¸jde i cm")
# Linje
plot(height_weight$weight, height_weight$height, col = "blue", main = "HÃ¸jde og VÃ¦gt - Regression",
abline(lm(height_weight$height~height_weight$weight)), cex = 1.3, pch = 16, xlab = "VÃ¦gt i Kg", ylab = "HÃ¸jde i cm")
# ggplot2
# install.packages("ggplot2")
library(ggplot2)
height_weight %>%
ggplot(aes(weight, height)) +
geom_point(color="red", size = 2) +
geom_smooth(method="lm", se=TRUE, color ="blue") +
xlab("VÃ¦gt i Kg.") +
ylab("HÃ¸jde i cm.") +
ggtitle("VÃ¦gt og hÃ¸jde i forhold til hinanden", subtitle = "Data er fiktive")
height_weight %>%
ggplot(aes(weight, height)) +
geom_point(color="red", size = 2) +
geom_smooth(method="lm", se=TRUE, color ="blue") +
xlab("VÃ¦gt i Kg.") +
ylab("HÃ¸jde i cm.") +
ggtitle("Vægt og højde i forhold til hinanden", subtitle = "Data er fiktive")
folkKon <-
folk2 %>%
group_by(KØN, HERKOMST, TID) %>%
summarise(INDHOLD = sum(INDHOLD))
ggplot(data = folkKon, aes(x = factor(TID), y = INDHOLD, fill = factor(KØN))) +
geom_col(position = "dodge") +
facet_wrap(~ HERKOMST, scale = "free_y", ncol = 2)
# **************************
# SWITCH
# **************************
UgeDagNr <- 2
UgeDagTekst <- switch(UgeDagNr,
"Mandag",
"Tirsdag",
"Onsdag",
"Torsdag",
"Fredag",
"LÃ¸rdag",
"SÃ¸ndag"
)
UgeDagTekst
setwd("C:\\Users\\Tue Hellstern\\Documents\\GitHub\\r2\\code")
getwd()
# Data
height_weight <- read_excel("SeminarData.xlsx", sheet = "height_weight")
# Data
height_weight <- read_excel("SeminarData.xlsx", sheet = "Linear_Regression")
# lm()
relation <- lm(weight~height, height_weight)
# predict()
a <- data.frame(height = 180)
result <-  predict(relation,a)
print(result)
# ggplot2
height_weight %>%
ggplot(aes(weight, height)) +
geom_point(color="red", size = 2) +
geom_smooth(method="lm", se=TRUE, color ="blue") +
xlab("Vægt i Kg.") +
ylab("Højde i cm.") +
ggtitle("Vægt og højde i forhold til hinanden", subtitle = "Data er fiktive")
runApp('~/Demo/Demo')
tal = 0:50
for (x in tal){
if (x == 2)
print(x)
else if (any(x %% 2:(x-1) == 0))
next
else {
print(x)
}
}
